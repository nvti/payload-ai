{"version":3,"sources":["../src/plugin.ts"],"sourcesContent":["import type { Config } from 'payload'\n\nimport { deepMerge } from 'payload/shared'\n\nimport type { PluginConfig } from './types.js'\n\nimport { lexicalJsonSchema } from './ai/schemas/lexicalJsonSchema.js'\nimport { instructionsCollection } from './collections/Instructions.js'\nimport { PLUGIN_NAME } from './defaults.js'\nimport { fetchFields } from './endpoints/fetchFields.js'\nimport { endpoints } from './endpoints/index.js'\nimport { init } from './init.js'\nimport { translations } from './translations/index.js'\nimport { isPluginActivated } from './utilities/isPluginActivated.js'\nimport { updateFieldsConfig } from './utilities/updateFieldsConfig.js'\nimport { defaultGenerationModels } from './ai/models/index.js'\nimport { getGenerationModels } from './utilities/getGenerationModels.js'\n\nconst defaultPluginConfig: PluginConfig = {\n  collections: {},\n  disableSponsorMessage: false,\n  generatePromptOnInit: true,\n  generationModels: defaultGenerationModels\n}\n\nconst sponsorMessage = `\n╔═══════════════════════════════════════════════════════════════╗\n║       THANK YOU FOR USING THE PAYLOAD AI PLUGIN!              ║\n║                                                               ║\n║  If this plugin makes your life easier, please                ║\n║  consider supporting its development and maintenance:         ║\n║                                                               ║\n║    • Buy me a coffee: https://buymeacoffee.com/ashbuilds      ║\n║    • Sponsor on GitHub: https://github.com/sponsors/ashbuilds ║\n║                                                               ║\n║  Your support fuels continued improvements,                   ║\n║  new features, and more caffeinated coding sessions! ☕        ║\n║                                                               ║\n║  Got feedback or need help? Submit an issue here:             ║\n║    • https://github.com/ashbuilds/payload-ai/issues/new       ║\n║                                                               ║\n║  Thank you again, and happy building!                         ║\n╚═══════════════════════════════════════════════════════════════╝\n`\n\nconst payloadAiPlugin =\n  (pluginConfig: PluginConfig) =>\n  (incomingConfig: Config): Config => {\n    pluginConfig = { ...defaultPluginConfig, ...pluginConfig }\n    pluginConfig.generationModels = getGenerationModels(pluginConfig)\n    const isActivated = isPluginActivated(pluginConfig)\n    let updatedConfig: Config = { ...incomingConfig }\n    let collectionsFieldPathMap = {}\n    if (isActivated) {\n      const Instructions = instructionsCollection(pluginConfig)\n      // Inject editor schema to config, so that it can be accessed when /textarea endpoint will hit\n      const lexicalSchema = lexicalJsonSchema(pluginConfig.editorConfig?.nodes)\n\n      if (pluginConfig.debugging) {\n        Instructions.admin.hidden = false\n      }\n\n      Instructions.admin.custom = {\n        ...(Instructions.admin.custom || {}),\n        [PLUGIN_NAME]: {\n          editorConfig: {\n            // Used in admin client for useObject hook\n            schema: lexicalSchema,\n          },\n        },\n      }\n\n      const collections = [...(incomingConfig.collections ?? []), Instructions]\n      const { collections: collectionSlugs = [] } = pluginConfig\n\n      const { components: { providers = [] } = {} } = incomingConfig.admin || {}\n      const updatedProviders = [\n        ...(providers ?? []),\n        {\n          path: '@ai-stack/payloadcms/client#InstructionsProvider',\n        },\n      ]\n\n      incomingConfig.admin = {\n        ...(incomingConfig.admin || {}),\n        components: {\n          ...(incomingConfig.admin?.components ?? {}),\n          providers: updatedProviders,\n        },\n      }\n\n      const pluginEndpoints = endpoints(pluginConfig)\n      updatedConfig = {\n        ...incomingConfig,\n        collections: collections.map((collection) => {\n          if (collectionSlugs[collection.slug]) {\n            const { schemaPathMap, updatedCollectionConfig } = updateFieldsConfig(collection)\n            collectionsFieldPathMap = {\n              ...collectionsFieldPathMap,\n              ...schemaPathMap,\n            }\n            return updatedCollectionConfig\n          }\n\n          return collection\n        }),\n        endpoints: [\n          ...(incomingConfig.endpoints ?? []),\n          pluginEndpoints.textarea,\n          pluginEndpoints.upload,\n          fetchFields,\n        ],\n        i18n: {\n          ...(incomingConfig.i18n || {}),\n          translations: {\n            ...deepMerge(translations, incomingConfig.i18n?.translations ?? {}),\n          },\n        },\n      }\n    }\n\n    updatedConfig.onInit = async (payload) => {\n      if (incomingConfig.onInit) await incomingConfig.onInit(payload)\n\n      if (!isActivated) {\n        payload.logger.warn(`— AI Plugin: Not activated. Please verify your environment keys.`)\n        return\n      }\n\n      await init(payload, collectionsFieldPathMap, pluginConfig)\n        .catch((error) => {\n          console.error(error)\n          payload.logger.error(`— AI Plugin: Initialization Error: ${error}`)\n        })\n        .finally(() => {\n          if (!pluginConfig.disableSponsorMessage) {\n            setTimeout(() => {\n              payload.logger.info(sponsorMessage)\n            }, 3000)\n          }\n        })\n    }\n\n    return updatedConfig\n  }\n\nexport { payloadAiPlugin }\n"],"names":["deepMerge","lexicalJsonSchema","instructionsCollection","PLUGIN_NAME","fetchFields","endpoints","init","translations","isPluginActivated","updateFieldsConfig","defaultGenerationModels","getGenerationModels","defaultPluginConfig","collections","disableSponsorMessage","generatePromptOnInit","generationModels","sponsorMessage","payloadAiPlugin","pluginConfig","incomingConfig","isActivated","updatedConfig","collectionsFieldPathMap","Instructions","lexicalSchema","editorConfig","nodes","debugging","admin","hidden","custom","schema","collectionSlugs","components","providers","updatedProviders","path","pluginEndpoints","map","collection","slug","schemaPathMap","updatedCollectionConfig","textarea","upload","i18n","onInit","payload","logger","warn","catch","error","console","finally","setTimeout","info"],"mappings":"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"}