{"version":3,"sources":["../../src/collections/Instructions.ts"],"sourcesContent":["import type { CollectionConfig, GroupField } from 'payload'\nimport type { PluginConfig } from 'src/types.js'\n\nimport { getGenerationModels } from '../utilities/getGenerationModels.js'\nimport { PLUGIN_INSTRUCTIONS_TABLE } from '../defaults.js'\n\nconst groupSettings = (pluginConfig: PluginConfig) =>\n  getGenerationModels(pluginConfig).reduce((fields, model) => {\n    if (model.settings) {\n      fields.push(model.settings)\n    }\n    return fields\n  }, [] as GroupField[])\n\nconst modelOptions = (pluginConfig: PluginConfig) =>\n  getGenerationModels(pluginConfig).map((model) => {\n    return {\n      fields: model.fields,\n      label: model.name,\n      value: model.id,\n    }\n  })\n\nconst defaultAccessConfig = {\n  create: () => true,\n  read: () => true,\n  update: () => true,\n}\n\nconst defaultAdminConfig = {\n  group: 'Plugins',\n  hidden: true,\n}\n\nexport const instructionsCollection = (\n  pluginConfig: PluginConfig,\n  options?: Partial<CollectionConfig>,\n) =>\n  <CollectionConfig>{\n    slug: PLUGIN_INSTRUCTIONS_TABLE,\n    access: {\n      ...defaultAccessConfig,\n      ...options?.access,\n    },\n    admin: {\n      ...defaultAdminConfig,\n      ...options?.admin,\n      group: 'Plugins',\n    },\n    fields: [\n      {\n        name: 'schema-path',\n        type: 'text',\n        admin: {\n          description: \"Please don’t change this unless you're sure of what you're doing\",\n        },\n        unique: true,\n      },\n      {\n        name: 'field-type',\n        type: 'select',\n        admin: {\n          description: \"Please don’t change this unless you're sure of what you're doing\",\n        },\n        defaultValue: 'text',\n        label: 'Field type',\n        options: [\n          {\n            label: 'text',\n            value: 'text',\n          },\n          {\n            label: 'textarea',\n            value: 'textarea',\n          },\n          {\n            label: 'upload',\n            value: 'upload',\n          },\n          {\n            label: 'richText',\n            value: 'richText',\n          },\n        ],\n      },\n      {\n        name: 'relation-to',\n        type: 'text',\n        admin: {\n          condition: (_, current) => {\n            return current['field-type'] === 'upload'\n          },\n        },\n        label: 'Relation to',\n      },\n      {\n        name: 'model-id',\n        type: 'select',\n        admin: {\n          components: {\n            Field: {\n              clientProps: {\n                filterByField: 'field-type',\n                options: modelOptions(pluginConfig),\n              },\n              path: '@ai-stack/payloadcms/fields#SelectField',\n            },\n          },\n        },\n        label: 'Model',\n        options: modelOptions(pluginConfig).map((option) => {\n          return {\n            label: option.label,\n            value: option.value,\n          }\n        }),\n      },\n      {\n        id: 'ai-prompts-tabs',\n        type: 'tabs',\n        tabs: [\n          {\n            // TODO: Add some info about the field to guide user\n            description:\n              'The Prompt field allows you to define dynamic templates using placeholders (e.g., {{ fieldName }}) to customize output based on your data fields.',\n            fields: [\n              {\n                name: 'prompt',\n                type: 'textarea',\n                admin: {\n                  components: {\n                    Field: '@ai-stack/payloadcms/fields#PromptEditorField',\n                  },\n                },\n                label: '',\n              },\n            ],\n            label: 'Prompt',\n          },\n          {\n            description: '',\n            fields: [\n              {\n                name: 'system',\n                type: 'textarea',\n                admin: {\n                  condition: (_, current) => {\n                    return current['field-type'] === 'richText'\n                  },\n                },\n                defaultValue: `INSTRUCTIONS:\nYou are a highly skilled and professional blog writer,\nrenowned for crafting engaging and well-organized articles.\nWhen given a title, you meticulously create blogs that are not only\ninformative and accurate but also captivating and beautifully structured.`,\n                label: '',\n              },\n            ],\n            label: 'System prompt',\n          },\n          {\n            // Note: Update when tabs PR is merged: https://github.com/payloadcms/payload/pull/8406\n            // admin: {\n            //   condition: (_, current) => {\n            //     console.log('condition in tab', current)\n            //     return current['field-type'] === 'richText'\n            //   },\n            // },\n            description: '',\n            fields: [\n              {\n                /**TODO's:\n                 *  - Layouts can be saved in as an array\n                 *  - user can add their own layout to collections and use it later for generate specific rich text\n                 *  - user can select previously added layout\n                 */\n                name: 'layout',\n                type: 'textarea',\n                admin: {\n                  condition: (_, current) => {\n                    return current['field-type'] === 'richText'\n                  },\n                },\n                defaultValue: `[paragraph] - Write a concise introduction (2-3 sentences) that outlines the main topic.\n[horizontalrule] - Insert a horizontal rule to separate the introduction from the main content.\n[list] - Create a list with 3-5 items. Each list item should contain:\n   a. [heading] - A brief, descriptive heading (up to 5 words)\n   b. [paragraph] - A short explanation or elaboration (1-2 sentences)\n[horizontalrule] - Insert another horizontal rule to separate the main content from the conclusion.\n[paragraph] - Compose a brief conclusion (2-3 sentences) summarizing the key points.\n[quote] - Include a relevant quote from a famous person, directly related to the topic. Format: \"Quote text.\" - Author Name`,\n                label: '',\n              },\n            ],\n            label: 'Layout',\n          },\n        ],\n      },\n      ...groupSettings(pluginConfig),\n    ],\n    labels: {\n      plural: 'Compose Settings',\n      singular: 'Compose Setting',\n    },\n  }\n"],"names":["getGenerationModels","PLUGIN_INSTRUCTIONS_TABLE","groupSettings","pluginConfig","reduce","fields","model","settings","push","modelOptions","map","label","name","value","id","defaultAccessConfig","create","read","update","defaultAdminConfig","group","hidden","instructionsCollection","options","slug","access","admin","type","description","unique","defaultValue","condition","_","current","components","Field","clientProps","filterByField","path","option","tabs","labels","plural","singular"],"mappings":"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"}